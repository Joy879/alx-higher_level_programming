# 2-matrix_divided.txt

``matrix_divided()`` returns the a matrix divided by a div

::

Test integers and floats

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Test Types

    >>> matrix_divided(1, 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([1, 23, 4], 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[1, 2, 3, "abcd"], [1, 3, 4, 5]], 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[1, 2, 3], [1, 3, 4, 3]], 2)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

    >>> matrix_divided([[1, 2, 3], [1, 3, 4]], "abc")
    Traceback (most recent call last):
    TypeError: div must be a number

    >>> matrix_divided([[1, 2, 3], [8, 9, 10]], 0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

Test values

    >>> matrix_divided([[1, 2, 3], [8, 9, 10]], 2)
    [[0.5, 1.0, 1.5], [4.0, 4.5, 5.0]]

    >>> matrix_divided([[1, 2, 3], [8, 9, 10]], 1)
    [[1.0, 2.0, 3.0], [8.0, 9.0, 10.0]]

    >>> matrix_divided([[1, 2, 3], [8, 9, 10]], 13)
    [[0.08, 0.15, 0.23], [0.62, 0.69, 0.77]]
